#
# weechat -- plugins.conf
#
# WARNING: It is NOT recommended to edit this file by hand,
# especially if WeeChat is running.
#
# Use commands like /set or /fset to change settings in WeeChat.
#
# For more info, see: https://weechat.org/doc/weechat/quickstart/
#

[var]
group_tools.buflist_main.buflist.format.buffer = "${define:my_left_section_contents,${eval:${format_number}${plugins.var.group_tools.buflist_main.element.fold.format}${indent}${format_nick_prefix}${format_name}${format_lag}${plugins.var.group_tools.buflist_main.element.filter.format}}}${define:my_left_section_contents_length,${lengthscr:${my_left_section_contents}}}${define:my_right_section_contents,${eval:${format_hotlist}}}${define:my_right_section_contents_length,${lengthscr:${my_right_section_contents}}}${if:${type}==server?${color:,31}:${color:default}}${if:${my_left_section_contents_length} > ${plugins.var.group_tools.buflist_main.section.left.size}?${cutscr:+${plugins.var.group_tools.buflist_main.section.left.size},${if:${type}==server?${color:white}:${color:${weechat.color.chat_prefix_more}}}${weechat.look.prefix_align_more},${my_left_section_contents}}:${my_left_section_contents}${repeat:${calc:${plugins.var.group_tools.buflist_main.section.left.size} - ${my_left_section_contents_length}}, }}${if:${my_right_section_contents_length} > ${plugins.var.group_tools.buflist_main.section.right.size}?${cutscr:+${plugins.var.group_tools.buflist_main.section.right.size},${if:${type}==server?${color:white}:${color:${weechat.color.chat_prefix_more}}}${weechat.look.prefix_align_more},${my_right_section_contents}}:${repeat:${calc:${plugins.var.group_tools.buflist_main.section.right.size} - ${my_right_section_contents_length}}, }${my_right_section_contents}}}"
group_tools.buflist_main.buflist.look.display_conditions = "(${buffer.hidden} == || ${plugins.var.group_tools.buflist_main.feature.show_hidden_buffers.enabled} !=) && (${type} !~ ^(channel|private)$ || ${type} =~ ^(channel|private)$ && ${buffer[${info:search_server_buffer_ptr,${buffer}}].local_variables.buflist_main_fold}==)"
group_tools.buflist_main.element.filter.enabled = "1"
group_tools.buflist_main.element.filter.format = "${if:${plugins.var.group_tools.buflist_main.element.filter.enabled}!=&&${buffer.local_variables.filter}!=? ${if:${type}==server?${color:black}:${color:31}}${buffer.local_variables.filter}}"
group_tools.buflist_main.element.fold.enabled = "1"
group_tools.buflist_main.element.fold.format = "${if:${plugins.var.group_tools.buflist_main.element.fold.enabled}!=&&${type}==server?${color:black}${if:${buffer.local_variables.buflist_main_fold}==?▼:▲} }"
group_tools.buflist_main.element.hotlist.enabled = "1"
group_tools.buflist_main.element.indent.enabled = "1"
group_tools.buflist_main.element.lag.enabled = "0"
group_tools.buflist_main.element.name.enabled = "1"
group_tools.buflist_main.element.nick_prefix.enabled = "0"
group_tools.buflist_main.element.number.enabled = "1"
group_tools.buflist_main.feature.indent_tree.enabled = "1"
group_tools.buflist_main.feature.real_net_name.enabled = "1"
group_tools.buflist_main.section.left.size = "15"
group_tools.buflist_main.section.right.size = "5"
group_tools.sys_usage.all.general.separator = ""
group_tools.sys_usage.component.cpu.content = "${define:my_cpu_percent,${info:python_eval,import psutil;print(psutil.cpu_percent(interval=0.0,percpu=False))}}${if:${length:${my_cpu_percent}}==3? }${my_cpu_percent}${color:246}%"
group_tools.sys_usage.component.cpu.display = "${color:24}▣"
group_tools.sys_usage.component.mem.content = "${define:my_mem_percent,${info:python_eval,import psutil;print(psutil.virtual_memory().percent)}}${if:${length:${my_mem_percent}}==3? }${my_mem_percent}${color:246}%"
group_tools.sys_usage.component.mem.display = "${color:24}▬▬"
group_tools.sys_usage.component.swap.content = "${define:my_swap_percent,${info:python_eval,import psutil;print(psutil.swap_memory().percent)}}${if:${length:${my_swap_percent}}==3? }${my_swap_percent}${color:246}%"
group_tools.sys_usage.component.swap.display = "${color:24}⎘"
group_tools.sys_usage.item.sys_usage.encoded = "196244EE82B3201C1946403030303234E296A3201C20312E331946403030323436250A196244EE82B3201C1946403030303234E296ACE296AC201C31372E391946403030323436250A196244EE82B3201C1946403030303234E28E98201C20302E301946403030323436250A"
group_tools.sys_usage.list.sys_usage.list = "cpu,mem,swap"
python.auto_away.idletime = "20"
python.auto_away.message = "Idle"
python.chanop.autodeop = "on"
python.chanop.autodeop_delay = "180"
python.chanop.default_banmask = "host"
python.chanop.display_affected = "on"
python.chanop.enable_bar = "on"
python.chanop.enable_multi_kick = "off"
python.chanop.enable_remove = "off"
python.chanop.kick_reason = ""
python.chanop.op_command = "/msg chanserv op $channel $nick"
python.cmd_help.color_alias = "white"
python.cmd_help.color_alias_name = "green"
python.cmd_help.color_alias_value = "green"
python.cmd_help.color_arguments = "121"
python.cmd_help.color_delimiters = "*white"
python.cmd_help.color_list = "121"
python.cmd_help.color_list_count = "white"
python.cmd_help.color_no_help = "red"
python.cmd_help.color_option_help = "brown"
python.cmd_help.color_option_name = "yellow"
python.cmd_help.display_no_help = "on"
python.cmd_help.format_option = "(${white:type}) ${description_nls}"
python.cmd_help.ignore_commands = "map,me,die,restart"
python.cmd_help.max_options = "5"
python.cmd_help.prefix = "["
python.cmd_help.right_align = "off"
python.cmd_help.right_padding = "15"
python.cmd_help.space = "2"
python.cmd_help.start_on_load = "on"
python.cmd_help.stop_on_enter = "off"
python.cmd_help.suffix = "]"
python.cmd_help.timer = "0"
python.title.current_buffer_prefix = ""
python.title.current_buffer_suffix = ""
python.title.hotlist_buffer_prefix = ""
python.title.hotlist_buffer_suffix = ""
python.title.hotlist_number_prefix = ""
python.title.hotlist_number_suffix = ""
python.title.hotlist_separator = ":"
python.title.short_name = "on"
python.title.show_hotlist = "on"
python.title.title_prefix = "[WeeChat ${info:version}] "
python.title.title_priority = "2"
python.title.title_suffix = ""
translate_lang = "es"

[desc]
python.cmd_help.color_alias = "color for text "Alias" (default: "white")"
python.cmd_help.color_alias_name = "color for alias name (default: "green")"
python.cmd_help.color_alias_value = "color for alias value (default: "green")"
python.cmd_help.color_arguments = "color for command arguments (default: "cyan")"
python.cmd_help.color_delimiters = "color for delimiters (default: "lightgreen")"
python.cmd_help.color_list = "color for list of commands/options (default: "green")"
python.cmd_help.color_list_count = "color for number of commands/options in list found (default: "white")"
python.cmd_help.color_no_help = "color for text "No help" (default: "red")"
python.cmd_help.color_option_help = "color for help on option (default: "brown")"
python.cmd_help.color_option_name = "color for name of option found (by adding "*" to option name) (default: "yellow")"
python.cmd_help.display_no_help = "display "No help" when command is not found (default: "on")"
python.cmd_help.format_option = "format of help for options: free text with identifiers using format: ${name} or ${color:name}: color is a WeeChat color (optional), name is a field of infolist "option": full_name, config_name, section_name, option_name, parent_name, description, description_nls, string_values, min, max, null_value_allowed, value_is_null, default_value_is_null, type, value, default_value (default: "(${white:type}) ${description_nls}")"
python.cmd_help.ignore_commands = "comma-separated list of commands (without leading "/") to ignore (default: "map,me,die,restart")"
python.cmd_help.max_options = "max number of options displayed in list (default: "5")"
python.cmd_help.prefix = "string displayed before help (default: "[")"
python.cmd_help.right_align = "align help to right (default: "off")"
python.cmd_help.right_padding = "padding to right when aligned to right (default: "15")"
python.cmd_help.space = "minimum space before help (default: "2")"
python.cmd_help.start_on_load = "auto start help when script is loaded (default: "off")"
python.cmd_help.stop_on_enter = "enter key stop help (default: "on")"
python.cmd_help.suffix = "string displayed after help (default: "]")"
python.cmd_help.timer = "number of seconds help is displayed (0 = display until help is toggled) (default: "0")"
